(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> id() takes exactly one argument (0 given)"
p3
sS'layer'
p4
S'C:\\Users\\Luis\\Desktop\\web2py\\applications\\WagMore\\controllers/default.py'
p5
sS'code'
p6
S'from datetime import datetime\n\ndef index():\n    return dict()\n\ndef first():\n    return dict()\n\ndef second():\n    return dict()\n\ndef loginpage():\n    return dict()\n\ndef signuppage():\n    return dict()\n\ndef signuppage2():\n    return dict()\n\ndef createProfile():\n    return dict()\n\ndef createProfile2():\n    return dict()\n\ndef createProfile_interests():\n    return dict()\n\ndef createProfile_aboutYourself():\n    return dict()\n\ndef createProfile_confirmation():\n    return dict()\n\n@auth.requires_login()\ndef mainPage():\n    form = SQLFORM(db.profile)\n    print (auth.user.id)\n    \n    if form.process().accepted:\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill out the form\'\n        \n    db(db.profile.id == id ).update(userID = auth.user.id)\n    return dict(form=form)\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(mainPage)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\Luis\\Desktop\\web2py\\applications\\WagMore\\controllers/default.py", line 88, in <module>\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\tools.py", line 4241, in f\n    return action(*a, **b)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\applications\\WagMore\\controllers/default.py", line 48, in mainPage\n    db(db.profile.id == id ).update(userID = auth.user.id)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\objects.py", line 2054, in update\n    ret = db._adapter.update("%s" % table._tablename, self.query, fields)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1023, in update\n    sql = self._update(tablename, query, fields)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1013, in _update\n    sql_w = \' WHERE \' + self.expand(query)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "C:\\Users\\Luis\\Desktop\\web2py\\gluon\\packages\\dal\\pydal\\adapters\\base.py", line 1396, in represent\n    obj = obj()\nTypeError: id() takes exactly one argument (0 given)\n'
p11
s.